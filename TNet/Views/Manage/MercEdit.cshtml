@model TNet.Models.MercViewModel
@using TNet.Models
@{
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
    ViewBag.Title = "编辑产品";
    if (string.IsNullOrWhiteSpace(Model.idmerc))
    {
        ViewBag.Title = "新增产品";
    }
}
<script type="text/javascript" charset="utf-8" src="@Url.Content("~/ueditor/ueditor.config.js")"></script>
<script type="text/javascript" charset="utf-8" src="@Url.Content("~/ueditor/ueditor.all.min.js")"> </script>
<!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
<!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
<script type="text/javascript" charset="utf-8" src="@Url.Content("~/ueditor/lang/zh-cn/zh-cn.js")"></script>

<link rel="stylesheet" href="@Url.Content("~/Css/bootstrap-fileinput/fileinput.min.css")" />
<script type="text/javascript" src="@Url.Content("~/Js/bootstrap-fileinput/plugins/sortable.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Js/bootstrap-fileinput/fileinput.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Js/bootstrap-fileinput/locales/zh.js")"></script>

<div class="ManageRightTitle">
    <ol class="breadcrumb">
        <li><a href="#">产品管理</a></li>
        <li><a href="@Url.Action("MercList","Manage")">产品列表</a></li>
        <li><a href="#" class="active">@(string.IsNullOrWhiteSpace(Model.idmerc) ? "新增产品" : "编辑产品")</a></li>
    </ol>
</div>
<div class="ManageRightContent">

    <form id="form1" action="@Url.Action("MercEdit","Manage")" method="post" class="form-horizontal">
        <div class="merc-edit-box ">
            <fieldset>
                @Html.HiddenFor(model => model.idmerc)
                @Html.HiddenFor(model => model.imgs)
                @Html.HiddenFor(model => model.descs)
                <input type="hidden" name="mercImages" id="mercImages" value="" />
                <div class="form-group">
                    @Html.LabelFor(model => model.idcitys, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @{Html.RenderAction("CitiesCheckBoxList", "Manage", new { idmodule = (!string.IsNullOrWhiteSpace(Model.idmerc) ? Model.idmerc : ""), moduleType = ModuleType.Merc });}
                    </div>
                    @Html.ValidationMessageFor(model => model.idcitys)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.idtype, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.idtype, new SelectList(Model.mercTypes, "idtype", "name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idtype)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merc1, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.merc1, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.merc1)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sellpt, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.sellpt, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.sellpt)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.baseprice, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        <div class="input-group">
                            <span class="input-group-addon">￥</span>
                            @Html.TextBoxFor(model => model.baseprice, new { @class = "form-control" })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.baseprice)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.stime, new { @class = "col-sm-2 control-label" })
                    <div id="@(Html.IdFor(model=>model.stime)+"_datepicker")" class="input-group date form_date col-sm-4 datetime_picker" data-date="" data-date-format="yyyy-mm-dd" data-link-field="@Html.IdFor(model=>model.stime)" data-link-format="yyyy-mm-dd">
                        <input class="form-control" size="16" type="text" value="@String.Format("{0:yyyy-MM-dd}", Model.stime)" readonly>
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                    @Html.HiddenFor(model => model.stime, new { @class = "form-control", Value = String.Format("{0:yyyy-MM-dd}", Model.stime) })
                    @Html.ValidationMessageFor(model => model.stime)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.entime, new { @class = "col-sm-2 control-label" })
                    <div id="@(Html.IdFor(model=>model.entime)+"_datepicker")" class="input-group date form_date col-sm-4 datetime_picker" data-date="" data-date-format="yyyy-mm-dd" data-link-field="@Html.IdFor(model=>model.entime)" data-link-format="yyyy-mm-dd">
                        <input class="form-control" size="16" type="text" value="@String.Format("{0:yyyy-MM-dd}", Model.entime)" readonly>
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                    @Html.HiddenFor(model => model.entime, new { @class = "form-control", Value = String.Format("{0:yyyy-MM-dd}", Model.entime) })
                    @Html.ValidationMessageFor(model => model.entime)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.netype, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.netype, new SelectList(MercViewModel.GetNeTypeSelectItems(), "DisplayValue", "DisplayText"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.netype)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.notes, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.notes, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.notes)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sortno, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.sortno, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.sortno)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.inuse, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.CheckBoxFor(model => model.inuse, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.inuse)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.isetup, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.CheckBoxFor(model => model.isetup, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.isetup)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.imgs, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        <input type="file" name="image" id="mymercimage" multiple class="file-loading" />
                    </div>
                </div>
                <div class="form-group" style="margin:0px">
                    @Html.LabelFor(model => model.descs, new { @class = "col-sm-2 control-label" })

                </div>
                <div class="form-group" style="margin:0px">
                    <div class="col-sm-2"></div>
                    <div class="col-sm-10" style="display:block;padding:0px;">
                        <script id="editor" type="text/plain" style="display:block;width:100%;height:500px;">
                        </script>
                    </div>
                    @Html.ValidationMessageFor(model => model.descs)
                </div>
                @Html.ValidationSummary(true)
                <div class="form-group">
                    <div class="col-sm-2">

                    </div>
                    <div class="col-sm-10" style="padding-left:0px;padding-top:10px;">
                        <input type="button" id="btnSave" value="保存" class="btn btn-primary" />
                    </div>
                </div>
            </fieldset>

        </div>

    </form>

</div>

<script type="text/javascript">

    function initFileInput(ctrlName, uploadUrl, initialPreview, initialPreviewConfig) {
        var $control = $('#' + ctrlName);
        $control.fileinput({
            initialPreview: initialPreview,
            initialPreviewConfig: initialPreviewConfig,
            initialPreviewAsData: true,
            language: 'zh', //设置语言
            uploadUrl: uploadUrl, //上传的地址
            uploadAsync: true,
            maxFileCount: 5,
            overwriteInitial: false,
            allowedPreviewTypes: ['image'],
            allowedFileExtensions: ['jpg', 'png', 'gif'],//接收的文件后缀
            showUpload: false, //是否显示上传按钮
            showRemove: false, // hide remove button
            showCaption: false,//是否显示标题
            browseClass: "btn btn-primary", //按钮样式
            previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
            showBrowse: false,
            showClose: false,
            showCancel: false,
            browseOnZoneClick: true

        }).on("filebatchselected", function (event, files) {
            $control.fileinput("upload");
        }).on('fileuploaded', function (event, data, id, index) {
            bindDrag();
            var responseData = data.response;
            if (responseData.Code == "1") {
                alert(responseData.Message);
            }
            else if (responseData.Code == "2") {
                alert(responseData.Message);
            }

        });
    }

    function initMercImages() {
        var uploadUrl = "@Url.Action("UploadMercImage","Manage",new { mercId = Model.idmerc })";
        var getMercImageUrl = "@Url.Action("AjaxMercImageList", "Manage")";
        var sortMercImagesUrl = "@Url.Action("SortMercImage", "Manage",new { isAjax =true})";
        var deleteMercImageUrl = "@Url.Action("DeleteMercImage", "Manage",new { isAjax =true})";
        $.post(getMercImageUrl, { mercId:@Model.idmerc, isAjax: true }, function (returndata) {
            returndata = eval("(" + returndata + ")");
            var initPreviewImage = [];
            var initialPreviewConfig = [];
            if (returndata.Code == 1) {
                if (returndata.Content.length > 0) {
                    for (var i = 0; i < returndata.Content.length; i++) {
                        initPreviewImage.push(returndata.Content[i].Path);
                        var initialPreviewConfigItem = {
                            url: deleteMercImageUrl,
                            key: returndata.Content[i].MercImageId,
                            extra: { mercImageId: returndata.Content[i].MercImageId, idmerc: @Model.idmerc }
                        };
                        initialPreviewConfig.push(initialPreviewConfigItem);
                    }
                }
            }
            else if (returndata.Code == 2) {
                alert("无法获取产品图片。");
            }
            initFileInput("mymercimage", uploadUrl, initPreviewImage, initialPreviewConfig);
            bindDrag();
        });
    }

    function bindDrag() {
        $(".file-initial-thumbs").attr("id", "simpleList");
        $(".file-preview-initial").addClass("list-group-item");
        //$(".file-preview-initial").addClass("glyphicon-move");
        if (document.getElementById('simpleList') != null) {
            KvSortable.create(document.getElementById('simpleList'), {
                handle: '.glyphicon-move',
                animation: 150,
                onEnd: function (evt) {

                }
            });
        }
    }

    $(function () {
        $("#@Html.IdFor(model=>model.inuse)").bootstrapSwitch({
            onText: '启用',
            offText: '禁用'
        });
        $("#@Html.IdFor(model=>model.isetup)").bootstrapSwitch({
            onText: '是',
            offText: '否'
        });

        initMercImages();
        var timeout = window.setInterval(bindDrag, 1000);

        var ue = UE.getEditor('editor');
        //对编辑器的操作最好在编辑器ready之后再做
        ue.ready(function () {
            //设置编辑器的内容
            UE.getEditor('editor').setContent('@Html.Raw(Model.descs)');
        });

        $("#btnSave").click(function () {
            var mercImages = "";
            $(".kv-file-content").find("img").each(function (i, d) {
                if (i == 0) {
                    mercImages += $(d).attr("src");
                }
                else {
                    mercImages += "," + $(d).attr("src");
                }
            });
            $("#mercImages").val(mercImages);
            var html = UE.getEditor('editor').getContent();
            $("#@Html.IdFor(model=>model.descs)").val(html);
            $("#form1").submit();
        });
        $('#@(Html.IdFor(model => model.stime)+"_datepicker")').datetimepicker({
            language: 'zh-CN',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
        $('#@(Html.IdFor(model => model.entime)+"_datepicker")').datetimepicker({
            language: 'zh-CN',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
    });

</script>
