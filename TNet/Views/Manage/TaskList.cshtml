@using TNet.Util;
@using TNet.Models;
@using TNet.BLL;

@model List<TaskViewModel>

@{
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
    var pageCount = Convert.ToInt32(ViewData["pageCount"]);
    var pageIndex = Convert.ToInt32(ViewData["pageIndex"]);


    DateTime? startDate = Convert.ToDateTime(ViewData["startDate"]);
    DateTime? endDate = Convert.ToDateTime(ViewData["endDate"]);
    string orderno = ViewData["orderno"].ToString();
    string idsend = ViewData["idsend"].ToString();
    string idrevc = ViewData["idrevc"].ToString();
    List<SelectItemViewModel<string>> idsendSelectItems = (List<SelectItemViewModel<string>>)ViewData["idsendSelectItems"];
    List<SelectItemViewModel<string>> idrevcSelectItems = (List<SelectItemViewModel<string>>)ViewData["idrevcSelectItems"];
}
<div class="ManageRightTitle">
    <ol class="breadcrumb">
        <li><a href="#">派单管理</a></li>
        <li><a href="#" class="active">派单列表</a></li>
    </ol>
</div>
<div class="ManageRightContent">
    <div>
        <form action="@Url.Action("TaskList","Manage")" method="post">
            <div class="row">
                <div class="col-xs-2">
                    <input type="text" class="form-control" placeholder="订单号" name="orderno" value="@orderno">
                </div>
                <div class="col-xs-2">
                    <div id="startDate_datepicker" class="input-group date form_date col-sm-10 datetime_picker" data-date="" data-date-format="yyyy-mm-dd" data-link-field="startDate" data-link-format="yyyy-mm-dd">
                        <input class="form-control" size="16" type="text" value="@String.Format("{0:yyyy-MM-dd}",startDate.Value!=DateTime.MinValue?startDate: DateTime.Now)" readonly>
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                    @Html.Hidden("startDate", String.Format("{0:yyyy-MM-dd}", startDate.Value != DateTime.MinValue ? startDate : DateTime.Now))
                </div>
                <div class="col-xs-2">
                    <div id="endDate_datepicker" class="input-group date form_date col-sm-10 datetime_picker" data-date="" data-date-format="yyyy-mm-dd" data-link-field="endDate" data-link-format="yyyy-mm-dd">
                        <input class="form-control" size="16" type="text" value="@String.Format("{0:yyyy-MM-dd}", endDate.Value!=DateTime.MinValue ? endDate : DateTime.Now)" readonly>
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                    @Html.Hidden("endDate", String.Format("{0:yyyy-MM-dd}", endDate.Value != DateTime.MinValue ? endDate : DateTime.Now))
                </div>
                <div class="col-xs-2">
                    @Html.DropDownList("idsend", new SelectList(idsendSelectItems, "DisplayValue", "DisplayText"), new { @class = "form-control", Value = idsend })
                </div>
                <div class="col-xs-2">
                    @Html.DropDownList("idrevc", new SelectList(idrevcSelectItems, "DisplayValue", "DisplayText"), new { @class = "form-control", Value = idrevc })

                </div>
                <div class="col-xs-1">
                    <input type="submit" value="搜索" class="btn btn-primary" placeholder=".col-xs-1" />
                </div>
            </div>
        </form>
    </div>
    <div>
        @Html.Raw(Url.BootstrapPagerHTML(pageCount, pageIndex, "TaskList", "Manage", ViewContext.RouteData.Values))
    </div>
    <div style="margin-top:10px;">
        <a class="btn btn-primary" href="@Url.Action("OrderList","Manage")">去派单</a>
    </div>
    <div>
        @if (Model.Count > 0)
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.orderno))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.cretime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.send))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, List<TaskRecverViewModel>>(en => en.TaskRecvers))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.revctime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.dotime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.finishtime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.echotime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, string>(en => en.notes))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, bool?>(en => en.inuse))</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.orderno</td>
                            <td>@(item.cretime == null ? "" : item.cretime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>@item.send</td>
                            <td>
                                @if (item.TaskRecvers != null && item.TaskRecvers.Count > 0)
                                {
                                    for (int i = 0; i < item.TaskRecvers.Count; i++)
                                    {
                                        <span>@(i == 0 ? item.TaskRecvers[i].mname : "," + item.TaskRecvers[i].mname)</span>
                                    }
                                }

                            </td>
                            <td>@(item.revctime == null ? "" : item.revctime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>@(item.dotime == null ? "" : item.dotime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>
                                @(item.finishtime == null ? "" : item.finishtime.Value.ToString("yyyy-MM-dd"))
                            </td>
                            <td>
                                @(item.echotime == null ? "" : item.echotime.Value.ToString("yyyy-MM-dd"))
                            </td>
                            <td>
                                @item.notes
                            </td>
                            <td>
                                <div class="switch">
                                    <input type="checkbox" onchange="enableTask('@Url.Action("TaskEnable", "Manage", new { idtask = item.idtask, enable = !item.inuse, isAjax = true })')" name="enableTask" @(item.inuse ? "checked" : "") />
                                </div>
                            </td>
                            <td>
                                <a href="@Url.Action("TaskDetail","Manage",new { idtask=item.idtask})" class="btn btn-default">详细</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h2>还没有任何派单任务.</h2>
        }

    </div>
</div>
<script type="text/javascript">

    $(function () {
        $.fn.bootstrapSwitch.defaults.onText = '启用';
        $.fn.bootstrapSwitch.defaults.offText = '禁用';
        $("[name='enableTask']").bootstrapSwitch();

        $('#startDate_datepicker').datetimepicker({
            language: 'zh-CN',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
        $('#endDate_datepicker').datetimepicker({
            language: 'zh-CN',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
    });
    function enableTask(url) {
        var manageLoginUrl = "@Url.Action("Login","Manage")";
        $.post(url, null, function (returndata) {
            returndata = eval("(" + returndata + ")");
            if (returndata.Code == "3") {
                alert(returndata.Message);
                window.Location.href = manageLoginUrl;
            } else if (returndata.Code == "1") {
                //alert("操作成功.");
                window.location.href = window.location.href;
            } else {
                alert("系统出错，请稍后再试。");
            }
        });
    }

</script>
