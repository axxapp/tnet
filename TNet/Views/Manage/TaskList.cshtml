@using TNet.Util;
@using TNet.Models;
@using TNet.BLL;
@using TCom.Model.Task;

@model List<TaskViewModel>

@{
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
    var pageCount = Convert.ToInt32(ViewData["pageCount"]);
    var pageIndex = Convert.ToInt32(ViewData["pageIndex"]);


    DateTime? startDate = Convert.ToDateTime(ViewData["startDate"]);
    DateTime? endDate = Convert.ToDateTime(ViewData["endDate"]);
    string orderno = ViewData["orderno"].ToString();
    string idsend = ViewData["idsend"].ToString();
    string idrevc = ViewData["idrevc"].ToString();
    List<SelectItemViewModel<string>> idsendSelectItems = (List<SelectItemViewModel<string>>)ViewData["idsendSelectItems"];
    List<SelectItemViewModel<string>> idrevcSelectItems = (List<SelectItemViewModel<string>>)ViewData["idrevcSelectItems"];
    List<SelectItemViewModel<int>> taskTypesSelectItems = (List<SelectItemViewModel<int>>)ViewData["taskTypesSelectItems"];
}
<div class="ManageRightTitle">
    <ol class="breadcrumb">
        <li><a href="#">派单管理</a></li>
        <li><a href="#" class="active">派单列表</a></li>
    </ol>
</div>
<div class="ManageRightContent">
    <div style="margin-top:10px;">
        <form action="@Url.Action("TaskList","Manage")" method="post">
            <div class="row">
                <div class="col-xs-2">
                    @Html.DropDownList("taskType", new SelectList(taskTypesSelectItems, "DisplayValue", "DisplayText"), new { @class = "form-control", Value = 0 })
                </div>
                <div class="col-xs-2">
                    <input type="text" class="form-control" placeholder="订单号或派单号" name="orderno" value="@orderno">
                </div>
                <div class="col-xs-2">
                    <input value="@String.Format("{0:yyyy-MM-dd}", startDate.Value != DateTime.MinValue ? startDate : DateTime.Now)" class="form-control form_datetime" id="startDate" name="startDate" readonly type="text">
                </div>
                <div class="col-xs-1" style="width:15px;padding-left:0;">
                    <p class="form-control-static">至</p>
                </div>
                <div class="col-xs-2">
                    <input value="@String.Format("{0:yyyy-MM-dd}", endDate.Value != DateTime.MinValue ? endDate : DateTime.Now)" class="form-control form_datetime" id="endDate" name="endDate" readonly type="text">
                </div>
            </div>
            <div class="row" style="margin-top:10px;">
                <div class="col-xs-2">
                    @Html.DropDownList("idsend", new SelectList(idsendSelectItems, "DisplayValue", "DisplayText"), new { @class = "form-control", Value = idsend })
                </div>
                <div class="col-xs-2">
                    @Html.DropDownList("idrevc", new SelectList(idrevcSelectItems, "DisplayValue", "DisplayText"), new { @class = "form-control", Value = idrevc })
                </div>
                <div class="col-xs-3">
                    <input type="submit" value="搜索" class="btn btn-primary" placeholder=".col-xs-1" />
                    <a class="btn btn-primary" href="@Url.Action("OrderList","Manage")">去派单</a>
                </div>
            </div>
        </form>
    </div>
    <div>
        @Html.Raw(Url.BootstrapPagerHTML(pageCount, pageIndex, "TaskList", "Manage", ViewContext.RouteData.Values))
    </div>

    <div class="list-box">
        @if (Model.Count > 0)
        {
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.tasktypeName))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.orderno))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.title))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.cretime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.send))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, List<TaskRecverViewModel>>(en => en.TaskRecvers))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.contact))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, String>(en => en.phone))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, int?>(en => en.status))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.accpeptime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.revctime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.dotime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.finishtime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, DateTime?>(en => en.echotime))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, string>(en => en.notes))</th>
                        <th>@(AttributeHelper.DisplayAttributeFor<TaskViewModel, bool?>(en => en.inuse))</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.tasktypeName</td>
                            <td>@item.orderno</td>
                            <td>@item.title</td>
                            <td>@(item.cretime == null ? "" : item.cretime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>@item.send</td>
                            <td>
                                @if (item.TaskRecvers != null && item.TaskRecvers.Count > 0)
                                {
                                    for (int i = 0; i < item.TaskRecvers.Count; i++)
                                    {
                                        <span>@(i == 0 ? item.TaskRecvers[i].mname : "," + item.TaskRecvers[i].mname)</span>
                                    }
                                }

                            </td>
                            <td>@item.contact</td>
                            <td>@item.phone</td>
                            <td>
                                @{
                                    TaskStatusItem statusItem = TaskStatus.get(item.status);
                                    if (statusItem != null)
                                    {
                                        <span>@statusItem.text</span>
                                    }
                                    else
                                    {
                                        <span>未知</span>
                                    }

                                }

                            </td>
                            <td>@(item.accpeptime == null ? "" : item.accpeptime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>@(item.revctime == null ? "" : item.revctime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>@(item.dotime == null ? "" : item.dotime.Value.ToString("yyyy-MM-dd"))</td>
                            <td>
                                @(item.finishtime == null ? "" : item.finishtime.Value.ToString("yyyy-MM-dd"))
                            </td>
                            <td>
                                @(item.echotime == null ? "" : item.echotime.Value.ToString("yyyy-MM-dd"))
                            </td>
                            <td>
                                @item.notes
                            </td>
                            <td>
                                <div class="switch">
                                    <input type="checkbox" onchange="enableRecord('@Url.Action("TaskEnable", "Manage", new { idtask = item.idtask, enable = !item.inuse, isAjax = true })')" name="enableTask" @(item.inuse ? "checked" : "") />
                                </div>
                            </td>
                            <td>
                                <a href="@Url.Action("TaskDetail","Manage",new { idtask=item.idtask})" class="btn btn-info">详细</a>
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>
                                    }
                                    else
                                    {
                                        <h2>还没有任何派单任务.</h2>
                                    }

    </div>
</div>
<script type="text/javascript">

    $(function () {
        $.fn.bootstrapSwitch.defaults.onText = '启用';
        $.fn.bootstrapSwitch.defaults.offText = '禁用';
        $("[name='enableTask']").bootstrapSwitch();
        bindDatetimePicker();
    });
</script>
