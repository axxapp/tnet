@model TNet.Models.ManageUserViewModel
@using TNet.Models
@{
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
    ViewBag.Title = "编辑工人信息";
    if (string.IsNullOrEmpty(Model.ManageUserId))
    {
        ViewBag.Title = "新增工人信息";
    }
}

<div class="ManageRightTitle">
    <ol class="breadcrumb">
        <li><a href="#">工人管理</a></li>
        <li><a href="@Url.Action("ManageUserList","Manage")">工人列表</a></li>
        <li><a href="#" class="active">@(string.IsNullOrEmpty(Model.ManageUserId) ? "新增工人信息" : "编辑工人信息")</a></li>
    </ol>
</div>
<div class="ManageRightContent">
    <form id="form1" action="@Url.Action("ManageUserEdit","Manage")" method="post" class="form-horizontal">
        <div class="merc-edit-box ">
            <fieldset>
                @Html.HiddenFor(model => model.ManageUserId)
                @Html.HiddenFor(model=>model.idweixin)
                <div class="form-group">
                    @Html.LabelFor(model => model.UserType, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.UserType, new SelectList(ManageUserViewModel.GetUserTypeSelectItems(), "DisplayValue", "DisplayText"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.UserType)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.phone, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.phone, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.phone)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.recv_order, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(model => model.recv_order, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.recv_order)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.recv_setup, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(model => model.recv_setup, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.recv_setup)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.recv_review, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(model => model.recv_review, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.recv_review)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.send_setup, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(model => model.send_setup, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.send_setup)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.inuse, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(model => model.inuse, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.inuse)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.notes, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.notes, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.notes)
                </div>
                @Html.ValidationSummary(true)
                <div class="form-group">
                    <div class="col-sm-2">
                    </div>
                    <div class="col-sm-10" style="padding-top:10px;">
                        <input type="submit" id="btnSave" value="保存" class="btn btn-primary" />
                    </div>
                </div>
            </fieldset>

        </div>

    </form>

</div>
<script type="text/javascript" >
    $(function () {
        $("#@Html.IdFor(model => model.inuse)").bootstrapSwitch({
            onText: "启用",
            offText: "禁用"
        });
        $("#@Html.IdFor(model => model.recv_setup)").bootstrapSwitch({
            onText: "是",
            offText: "否"
        });
        $("#@Html.IdFor(model => model.send_setup)").bootstrapSwitch({
            onText: "是",
            offText: "否"
        });
        $("#@Html.IdFor(model => model.recv_review)").bootstrapSwitch({
            onText: "是",
            offText: "否"
        });
        $("#@Html.IdFor(model => model.recv_order)").bootstrapSwitch({
            onText: "是",
            offText: "否"
        });
    });

</script>